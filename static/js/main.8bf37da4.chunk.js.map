{"version":3,"sources":["utils/googlesheets.js","App.js","reportWebVitals.js","index.js"],"names":["newRow","a","doc","GoogleSpreadsheet","useServiceAccountAuth","creds","loadInfo","sheet","sheetsById","addRow","result","appendSpreadsheet","App","useState","name","setName","age","setAge","handleChangeAge","e","target","value","className","onSubmit","preventDefault","onChange","type","id","checked","for","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"8zFAIA,WAAiCA,GAAjC,mBAAAC,EAAA,6DACQC,EAAM,IAAIC,oBAAkB,gDADpC,SAEQD,EAAIE,sBAAsBC,GAFlC,uBAGQH,EAAII,WAHZ,cAIQC,EAAQL,EAAIM,WAAW,GAJ/B,SAMuBD,EAAME,OAAOT,GANpC,cAMQU,EANR,yBAOSA,GAPT,6C,sBAUeC,M,oDC+BAC,MAxCf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAKA,SAASC,EAAgBC,GACvBF,EAAOE,EAAEC,OAAOC,OAQlB,OACE,qBAAKC,UAAU,MAAf,SACE,uBAAMC,SAPV,SAAsBJ,GACrBA,EAAEK,iBACFb,EAAkB,CAACG,OAAME,SAKtB,UACE,mDAAM,uBAAOF,KAAK,OAAOO,MAAOP,EAAMW,SAf5C,SAA0BN,GACxBJ,EAAQI,EAAEC,OAAOC,aAeb,mDACE,8BACA,uBAAOK,KAAK,QAAQC,GAAG,KAAKb,KAAK,MAAMO,MAAM,KAAKO,QAAiB,OAARZ,EAAcS,SAAUP,IACnF,uBAAOW,IAAI,KAAX,gCAEA,8BACA,uBAAOH,KAAK,QAAQC,GAAG,KAAKb,KAAK,MAAMO,MAAM,KAAKO,QAAiB,OAARZ,EAAcS,SAAUP,IACnF,uBAAOW,IAAI,KAAX,sBAEA,8BACA,uBAAOH,KAAK,QAAQC,GAAG,KAAKb,KAAK,MAAMO,MAAM,KAAKO,QAAiB,OAARZ,EAAcS,SAAUP,IACnF,uBAAOW,IAAI,KAAX,mCAGF,wDC3BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDDQ,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,OAOJd,K","file":"static/js/main.8bf37da4.chunk.js","sourcesContent":["\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport  creds from './credentials.json';\n\nasync function appendSpreadsheet(newRow) {\n  const doc = new GoogleSpreadsheet('1EnXsMernyQFk1DmMgGT_rSXFwTOUtjzKWNltXD3zic0');\n  await doc.useServiceAccountAuth(creds);\n  await doc.loadInfo();\n  const sheet = doc.sheetsById[0];\n\n  const result = await sheet.addRow(newRow);\n  return result;\n};\n\nexport default appendSpreadsheet","\nimport './App.css';\nimport { useState } from \"react\";\nimport appendSpreadsheet from './utils/googlesheets'\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [age, setAge] = useState(\"\");\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n  function handleChangeAge(e) {\n    setAge(e.target.value)\n  }\n\n  function handleSubmit(e) {\n   e.preventDefault()\n   appendSpreadsheet({name, age})\n  }\n\n  return (\n    <div className=\"App\">\n      <form onSubmit={handleSubmit}>\n        <p>姓名：<input name='name' value={name} onChange={handleChangeName}></input></p>\n        <p>年紀：\n          <p>\n          <input type=\"radio\" id=\"18\" name=\"age\" value='18' checked={age === '18'} onChange={handleChangeAge}/>\n          <label for=\"18\">18 以下</label>\n          </p>\n          <p>\n          <input type=\"radio\" id=\"30\" name=\"age\" value=\"30\" checked={age === '30'} onChange={handleChangeAge}/>\n          <label for=\"30\">18~30</label>\n          </p>\n          <p>\n          <input type=\"radio\" id=\"40\" name=\"age\" value=\"40\" checked={age === '40'} onChange={handleChangeAge}/>\n          <label for=\"40\">30 以上</label>\n          </p>\n        </p>\n        <button>送出</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}